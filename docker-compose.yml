# docker-compose.yml
services:
  db:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mixedvoices
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      target: base  # This will be overridden in prod
    ports:
      - "5001:5001"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db/mixedvoices
      REDIS_URL: redis://redis:6379/0
      FLASK_APP: mixedvoices.server
      FLASK_RUN_HOST: "0.0.0.0"
      FLASK_RUN_PORT: 5001
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: python -m flask run --host=0.0.0.0 --port=5001

  worker:
    build:
      context: .
      target: base  # This will be overridden in prod
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db/mixedvoices
      REDIS_URL: redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A mixedvoices.tasks worker --loglevel=info

volumes:
  postgres_data: